package edu.esprit.pi.workshop.pdf;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import edu.esprit.pi.dao.ArticleDAO;
import edu.esprit.pi.entites.Article;
import java.util.Date;

public class FirstPdf {

    private Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

  // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    public void addMetaData(Document document) {
        document.addTitle("Mon premier PDF");
        document.addSubject("Utilisant iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Mohamed Amine KLABI");
        document.addCreator("Inspiré de Lars Vogel");
    }

    public void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Gestion des projets à Esprit", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Rapport généré par : " + System.getProperty("user.name") + ", " + new Date(), smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph("Ce document décrit comment sont gérés les projets à Esprit ", smallBold));
        addEmptyLine(preface, 8);
        preface.add(new Paragraph("C'est une version préliminaire du Document, toute autres modifications sera sous vos responsabilités.  MAK ;-).", redFont));

        document.add(preface);
        // Commencer une nouvelle page
        document.newPage();
    }

    public void addContent(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Premier Chapitre", catFont);
    //anchor.setName("First Chapter");

        // le socond paramètre est le numéro du chapitre.
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("Projet Intégration", subFont);
        Section subCatPart = catPart.addSection(subPara);

        subCatPart.add(new Paragraph("On commennce par le Sprint 1 qui est en Java"
                + "il a une durée de 4 semaines."
                + " Le Sprint 2 est J2ME, sa durèe est de 2 semaines."
                + "Enfin le Sprint 3 qui est le web dure encore 4 semaines."));

        // Nouvelle 
        Paragraph subPara2 = new Paragraph("Exemple mètier pour le remplissage d'une liste", subFont);
        Section subCatPart2 = catPart.addSection(subPara2);
        subCatPart2.add(new Paragraph("Remplissage dynamique "));
        // Ajouter une liste de sections
        createList(subCatPart2);
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 3);
        subCatPart2.add(paragraph);

        // Ajouter un tableau
        createTable(subCatPart2);

        // Ajouter tout cela au document.
        document.add(catPart);

        // Nouvelle Section    
        anchor = new Anchor("Deuxième Chapitre", catFont);
    //anchor.setName("Second Chapter");

        // Le socond paramètre est le numéro du chapitre
        catPart = new Chapter(new Paragraph(anchor), 1);

        subPara = new Paragraph("Validation du projet d'intégration", subFont);
        subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("C'est une phase très importante, veuillez respeter la date de livraison. "
                + "  BONNE CHANCE"));

        // ajouter au document
        document.add(catPart);

    }

    public void createTable(Section subCatPart)
            throws BadElementException {
        PdfPTable table = new PdfPTable(3);
        PdfPCell c1 = new PdfPCell(new Phrase("Client"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Article"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Quantité"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        // Récupération de la liste des articles.
        java.util.List<Article> listArticles = new ArticleDAO().findAll();
        // remplissare des cellules de la liste
        for (Article article : listArticles) {
            table.addCell(""+article.getClient().getNom());
            table.addCell(""+article.getStock().getLibelle());
            table.addCell(""+article.getQuantite());
        }
        subCatPart.add(table);
    }

    public void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("Premier point"));
        list.add(new ListItem("Deuxième point"));
        list.add(new ListItem("Troisième point"));
        subCatPart.add(list);
    }

    public void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
